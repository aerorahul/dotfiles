[user]
  name = Rahul Mahajan
[core]
  editor = vim
  whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
  excludesfile = ~/.gitignore
  hooksPath = ~/.git/hooks
[sendemail]
  smtpencryption = tls
  smtpserver = smtp.gmail.com
  smtpuser = aerorahul@gmail.com
  smtppass = password
  smtpserverport = 587
[web]
  browser = google-chrome
[instaweb]
  httpd = apache2 -f
[rerere]
  enabled = 1
  autoupdate = 1
[push]
  # push should only push current branch, not all branches
  default = current
[color]
  ui = auto
  interactive = auto
[color "branch"]
  current = yellow bold
  local = green bold
  remote = cyan bold
[color "diff"]
  commit = yellow bold
  meta = yellow bold
  frag = magenta bold
  func = cyan bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "status"]
  added = green bold
  changed = yellow bold
  untracked = red bold
[diff]
  tool = xxdiff
  mnemonicprefix = true
  #tool = meld
[difftool "xxdiff"]
  prompt = true
  trustExitCode = true
  #cmd = open -W -a xxdiff --args \"$LOCAL\" \"$REMOTE\"
  cmd = /Applications/xxdiff.app/Contents/MacOS/xxdiff \"$LOCAL\" \"$REMOTE\"
[difftool "meld"]
  trustExitCode = true
  cmd = open -W -a Meld --args \"$LOCAL\" \"$REMOTE\"
[merge]
  tool = meld
  stat = true
[mergetool]
  prompt = false
[mergetool "meld"]
  trustExitCode = true
  cmd = open -W -a Meld --args --auto-merge \"$LOCAL\" \"$BASE\" \"$REMOTE\" --output=\"$MERGED\"
[github]
  user = aerorahul
  token = token
[gitflow "prefix"]
  feature = feature-
  release = release-
  hotfix = hotfix-
  support = support-
  versiontag = v
[format]
  pretty = fuller
[alias]
  a = add --all
  ai = add -i
  #############
  ap = apply
  as = apply --stat
  ac = apply --check
  #############
  ama = am --abort
  amr = am --resolved
  ams = am --skip
  #############
  b = branch
  ba = branch -a
  bd = branch -d
  bD = branch -D
  br = branch -r
  bc = rev-parse --abbrev-ref HEAD
  #############
  c = commit
  ca = commit -a
  cm = commit -m
  cam = commit -am
  cem = commit --allow-empty -m
  cd = commit --amend
  cad = commit -a --amend
  ced = commit --allow-empty --amend
  #############
  cl = clone
  clr = clone --recursive
  cld = clone --depth 1
  clg = !sh -c 'git clone git://github.com/$1 $(basename $1)' -
  clgp = !sh -c 'git clone git@github.com:$(git config --get user.username)/$1 $1' -
  #############
  cp = cherry-pick
  cpa = cherry-pick --abort
  cpc = cherry-pick --continue
  #############
  d = diff
  dns = diff --name-status
  dno = diff --name-only
  dp = diff --patience
  dc = diff --cached
  dk = diff --check
  dck = diff --cached --check
  dl = difftool
  dld = difftool --dir
  dct = difftool --cached
  #############
  f = fetch
  fo = fetch origin
  fu = fetch upstream
  #############
  fp = format-patch
  #############
  fk = fsck
  #############
  g = grep -p
  #############
  lg = log --graph --abbrev-commit --date=short --date-order \
           --pretty=format:'%C(yellow)%h%Creset - %Cgreen%>(10)%ad (%ar) %C(bold blue)%<(7)<%aN>%Cred%d %Creset%s'
  lgno = lg --name-only
  lgns = lg --name-status
  last = log -1 HEAD
  today = lg --since=midnight
  yesterday = lg --since yesterday --until=midnight
  history = lg -n30
  #############
  ls = ls-files
  lsf = !git ls-files | grep -i
  #############
  m = merge
  ma = merge --abort
  mc = merge --continue
  ms = merge --skip
  mtf = merge --no-commit --no-ff
  #############
  o = checkout
  ob = checkout -b
  discard = checkout --
  #############
  pr = prune -v
  #############
  ps = push
  psf = push -f
  psu = push -u
  pst = push --tags
  #############
  pso = push origin
  psao = push --all origin
  psfo = push -f origin
  psuo = push -u origin
  #############
  psom = push origin master
  psaom = push --all origin master
  psfom = push -f origin master
  psuom = push -u origin master
  psoc = !git push origin $(git bc)
  psaoc = !git push --all origin $(git bc)
  psfoc = !git push -f origin $(git bc)
  psuoc = !git push -u origin $(git bc)
  psdc = !git push origin :$(git bc)
  #############
  pl = pull
  pb = pull --rebase
  #############
  plo = pull origin
  pbo = pull --rebase origin
  plom = pull origin master
  ploc = !git pull origin $(git bc)
  pbom = pull --rebase origin master
  pboc = !git pull --rebase origin $(git bc)
  #############
  plu = pull upstream
  plum = pull upstream master
  pluc = !git pull upstream $(git bc)
  pbum = pull --rebase upstream master
  pbuc = !git pull --rebase upstream $(git bc)
  #############
  rb = rebase
  rba = rebase --abort
  rbc = rebase --continue
  rbi = rebase --interactive
  rbs = rebase --skip
  #############
  re = reset
  rh = reset HEAD
  reh = reset --hard
  rem = reset --mixed
  res = reset --soft
  rehh = reset --hard HEAD
  remh = reset --mixed HEAD
  resh = reset --soft HEAD
  #############
  r = remote
  ra = remote add
  rr = remote rm
  rv = remote -v
  rn = remote rename
  rp = remote prune
  rs = remote show
  rao = remote add origin
  rau = remote add upstream
  rro = remote remove origin
  rru = remote remove upstream
  rso = remote show origin
  rsu = remote show upstream
  rpo = remote prune origin
  rpu = remote prune upstream
  #############
  rmf = rm -f
  rmrf = rm -r -f
  #############
  s = status
  sb = status -s -b
  #############
  sa = stash apply
  sc = stash clear
  sd = stash drop
  sl = stash list
  sp = stash pop
  ss = stash save
  sw = stash show
  #############
  t = tag
  td = tag -d
  #############
  w = show
  wp = show -p
  wr = show -p --no-color
  #############
  svnr = svn rebase
  svnd = svn dcommit
  svnl = svn log --oneline --show-commit
  #############
  subadd = !sh -c 'git submodule add git://github.com/$1 $2/$(basename $1)' -
  subup = submodule update --init --recursive
  subpull = !git submodule foreach git pull --tags origin master
  #############
  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  assumed = !git ls -v | grep ^h | cut -c 3-
  unassumeall = !git assumed | xargs git unassume
  assumeall = !git status -s | awk {'print $2'} | xargs git assume
  #############
  bump = !sh -c 'git commit -am \"Version bump v$1\" && git psuoc && git release $1' -
  release = !sh -c 'git tag v$1 && git pst' -
  unrelease = !sh -c 'git tag -d v$1 && git pso :v$1' -
  aliases = !git config -l | grep alias | cut -c 7-
  snap = !git stash save 'snapshot: $(date)' && git stash apply 'stash@{0}'
  bare = !sh -c 'git symbolic-ref HEAD refs/heads/$1 && git rm --cached -r . && git clean -xfd' -
  whois = !sh -c 'git log -i -1 --author=\"$1\" --pretty=\"format:%an <%ae>\"' -
  serve = daemon --reuseaddr --verbose --base-path=. --export-all ./.git
  #############
  ours = "!f() { git checkout --ours $@ && git add $@; }; f"
  theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
  subrepo = !sh -c 'git filter-branch --prune-empty --subdirectory-filter $1 master' -
  human = name-rev --name-only --refs=refs/heads/*
[help]
  autocorrect = 1
[credential "https://github.com"]
  helper = store --file ~/.git-credentials
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[http]
  sslverify = false
[url "https://github.com/"]
  insteadOf = git://github.com/
  insteadOf = git@github.com:
  insteadOf = github:
  insteadOf = gh:
[url "https://github.com/jcsda/"]
  insteadOf = jcsdagh:
[url "https://github.com/aerorahul/"]
  insteadOf = mygh:
[url "https://github.com/NOAA-EMC/"]
  insteadOf = emcgh:
